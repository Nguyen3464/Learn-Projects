#Rails API

    ## Learning Objectives
        can discern RESTful routes associated with views
        can discern RESTful routes associated with database actions
        can discern JSON from HTML
        can match RESTful controller methods to the appropriate HTTP action
        can utilize Postman to visualize API data flow
        can implement appropriate model validations and corresponding specs
    
    ## Vocabulary

        API: Application Programming Interface is reposible for transmiting data accross the internet via json

        JSON: Javascript Object Notation is a datastructure

        endpoint

        Postman: is a gooie that allows us to display data to for API.   it can connect with local host and render data

        resource
    
    ## Process

        - $cd to your Desktop
        - $ rails new rails-api -d postgresql -T
        - $ cd rails-api
        - $ rails db:create
        - Add the remote from GitHub
            - copy remote add origin https
            - $ ls -a // check for git file
        - Create the main branch
            - $ git checkout main
        - Make an initial commit
            - $ git status $ git add $ commit $ git push
        - $ bundle add rspec-rails
        - $ rails generate rspec:install
        - $ rails s
        - $ rails generate resource RESOURCENAME name:string cohort:string
        - $ rails db:migrate

        - Open the folder in a text editor
        - in Routes folder
        - $ rails routes
        - $ rails routes -Expand // shows routes generated by $rails g resource

    ## Examples

        - add data into the schema

        -$ rails c

        - student.create(name: 'sam', cohort: 'bravo')
        - student.create(name: 'chris', cohort: 'hotel')
        - student.create(name: 'nicole', cohort: 'delta')

        
    flow data entry to controller model database condroller view
    ## RESTful routes

        - index: displays information
        - new: form
        - show: displays one item
        - create: adds new instance
        - edit: form
        - destroy: deletes

    ## Controller

        //index

        def index
            students = Student.all // controllerName.all
            render json: students // student = variable name on line 69
        end
        
        //show

        def show
            student = Student.find(params[:id]) // use PostgrSQL querys syntax
            render json: student
        end

        //create

        def create
            student = Student.create(student_params)
            if student.valid?
                render json: student
            else
                render json: student.errors
            end
        end

        //update

        def update
            student = Student.find(params[:id])
            student.update(student_params)
            if student.valid?
                render json: student
            else render json: student.errors
            end
        end

        //destroy

        def destroy
            student = student.find(params[:id])
            if student.destroy
                render json: student
            else
                render json: student.errors
            end
        end

        // strong params, require(:student = variableName line73)
        private
        def student_params
            params.require(:student).permit(:name, :cohort)
        end

        ///////////////////////////

        make http verb actions request with postman,  it will point at local30000
        post request---> local300

        to view post request open up body<raw and use json object syntax to add entries

        {
            "name": 'Jose',
            "cohort": 'Bravo'
        }

        after entering entry, you will need to disable authenticity token while in development of a database.

        copy disable authToken from sylabus and paste into application_controller

